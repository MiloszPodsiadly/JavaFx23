plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

group = 'com.pl'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}
javafx {
    version = "23"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
    //platform = 'win'  // force macOS artifacts even if building on Linux/Windows
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.openjfx:javafx-controls:23'
    implementation 'org.openjfx:javafx-fxml:23'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

application {
    mainClass = 'com.pl.javafx23.JavaFxApplication'
    applicationDefaultJvmArgs = [
            '--add-modules', 'javafx.controls,javafx.fxml',
            '--module-path', 'C:/javafx-sdk-23/lib'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}
